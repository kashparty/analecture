ID: 8b3a8b9f-61b5-40b2-8f7a-adf800cb96d9
Title: idb-topic-14-er
Category: COMP40007 - Introduction to Databases (Autumn 2021-2022)
Lecturer: Peter McBrien
Date: 08/12/2021
This topic is on entity relationship modelling, which is a graphical way of designing database schemas.
0:02
To make it easy to design a database schema, you need some way to the models semantics of the universe of discourse,
0:12
which you want to provide a database for, and a common way to do this is to use either entity relationship modelling.
0:20
And in fact, there are many, many dozens, in fact, hundreds of variants of air modelling that have been proposed.
0:28
Or you will class diagrams. You don't need to be able to map those €l.
0:34
M. diagrams into relational schemas and to then ensure that the relational schemas are a good design is
0:40
something called normalisation and then analysing functional dependencies which allow you to do that.
0:48
So topics one, two items one and two here will be the subjects.
0:55
This topic and item free will be the subject of future topics.
0:59
And the reason why we want to have a graphical way of designing schemas is that even for relatively small scale schemas seen,
1:06
the overall structure of the database is quite difficult.
1:15
If you look at school statements, so in the bank branch example we've been using so far, even though any contains free tables,
1:18
just the statements to create those free tables requires a little bit of an analysis to determine that,
1:27
for example, the accounts are related via this functional, this foreign key to the branch table and that the movement,
1:34
this foreign key are related to the account table that we have a primary key, which is the movement I.D. and so on.
1:44
Whereas if we use an entity relationship model,
1:54
it immediately becomes apparent that we have these things called relationships between the movements and accounts and accounts from the branch.
1:56
And what are the attributes and partly underlying? What are the key value of the entity?
2:04
So more formally, an entity denotes some set of objects in the real world, which are conceptually of the same type.
2:12
And when you look at English language, quite often, a noun might employ imply some entity set proper nouns imply instances.
2:22
So if we look at the name of a country such as Great Britain, it is an instance of what would be an entity set country.
2:33
But Great Britain is not an entity in itself is an instance of an entity.
2:41
Set relationships represent sets of tuples, which are linked together two or more entities.
2:45
And quite often in English language, verbs imply some sort of relationship.
2:54
The instances of a relationship be formed of pairs of values taken from instances of the entities which they connect.
3:01
But at the moment, we're just going to concentrate on binding relationships, i.e. relationships, which link together to entities.
3:09
Let's just look at a very simple example about how we can identify entities and relationships in some text here we've got in news limited.
3:17
Each person works in exactly one department and there are no restrictions on the number of persons the department may employ.
3:26
So we see a person being repeated a couple of times in department being repeats a couple of times here.
3:33
And these are nouns which naturally denote sets of things and therefore need us to correct this person entity.
3:39
And Department of Entity. And then we've got a verb works in to link person and department.
3:46
And that gives me a relationship between the person department. But even in simpler examples like this,
3:55
we see the fact that it's not a very simple process to completely identify what are the relationships and what are the entities specifically.
4:02
Here we've got the ideas that are talking about the persons department may employ,
4:10
but employ is just the reflection of the works in actually going from department
4:15
to person doesn't imply imply that a separate relationship should be created.
4:21
Entities may have attributes which take on different types of mandatory attribute is simply a function that
4:29
maps between values in the instance is set and sets of value in the values set associated with the attribute,
4:38
a optional attribute simply removes the property that the factual value has to be present,
4:47
and a key value means that the different values of the attribute are unique.
4:54
As an example, before before looking at the formal definition in more depth in here,
4:59
we've got some text which talks about recall the name of each person worked in department and identify them by their salary number,
5:05
both the name and the salary number of nouns which are describing properties of the person entity,
5:13
which we've already found, and this type of use of nouns naturally lends itself to being represented as a attribute.
5:22
And then optionally, we might have a bonus figure recorded for the persons.
5:30
And this is denoted here by a question mark being put against the bonus.
5:36
The fact that salary numbers identified the person means we underline that going back to the definitions here,
5:41
we see that the concept of an attribute implies that we have a instance of the entity
5:49
set being linked to an instance of the value set associated with the attribute.
5:57
And it's unique if it's a fact that for any instance of an entity, if we take value one and the value two from the attributes value pairings,
6:02
the two values must be the same, i.e. you cannot have more than one value associated with the entity.
6:14
And it's mandatory. If it's the case that if I take the entity list of instances that I can generate from the attribute,
6:22
I end up with the same original entity set i.e. that is a attribute value for every instance of the entity.
6:32
The key values simply mean that when I take the values that I project out from the different values that might be involved in the key,
6:43
I end up with the same set of values as in the original entity set.
6:54
So to put another way, I can regard people in this case as being represented by their salary numbers and departments represented by the department.
7:00
Nine.
7:10
Using look here, cart analogy constraints in an model means I'm able to describe how many instances of one entity are related to some other entity,
7:16
and the way that you read this is that for each instance of the one that are between L and U,
7:28
instances of that entity appearing in the relationship related to different values in the two.
7:38
Therefore, if I look an example, each person works in exactly one departments means that each person works in between one and one department.
7:45
There are no restrictions on the number of persons. A department employee implies that the range of instances will go from, not one.
7:57
That means each department may have no people working in it.
8:05
One person, two people up to any number of people working in it.
8:08
As trial to quiz question, looking at what the extent of relationships may be given continental constraints have been put in place.
8:16
By far, the most popular answer is a and indeed, it's the correct answer and the reason why it's the correct answer,
8:32
why the answer is not possible extent is that we have pizza here being related to both maths and computer science, but they can't.
8:38
And Allotey constraints here says that each person can be related only between nought and one instance of the parliament.
8:47
And therefore, the fact that are two departments for Peter breaks to come down as a constraint.
8:56
This quiz question on covenants constraints is much more subtle to work out.
9:04
So give it quite some thought before you choose your answer.
9:11
And you can see the answers here were quite evenly split, but B was the most popular answer.
9:19
But D is in fact the correct answer. The reasoning is subtle.
9:25
As I mentioned before, let me argue through and justify lost why it is the best one him.
9:29
First of all, we got the statement here that branch is based in towns are all assigned to an area manager for that town,
9:37
and there's an implication there that branches aren't necessarily based in towns.
9:45
He was saying that it's the case that branches in towns are assigned area manager.
9:51
Branches outside towns aren't necessarily assigned to an area manager and therefore the Examiner is more appropriately.
9:55
No one one one one one. So we have branches here being associated to between zero and one towns.
10:04
It doesn't make much sense to say that we have any number of towns associate with can branch
10:13
because obviously a branch will be in one town or another town if it is in any towns.
10:19
Then going to the other end, we got the fact here that we've said that we have an area manager are only assigned to towns that have branches,
10:25
so notice here the area manager is a mandatory attribute of town that's already been given to you.
10:38
And therefore, if assigns an area manager to a town,
10:45
it must be the case that it has at least one branch in it and hence I can discard answers A and B because
10:50
we always have a lower bound of zero for the number of instances each town has been associated with.
10:58
And therefore by that process of elimination, I need a not one and a one end and D is the most appropriate answer.
11:05
As I mentioned, right at the start, there are actually many variants of modelling.
11:18
This course is going to be using look here cart analogy constraints.
11:23
So you always read the number of instances of the entity being involved in the relationship as the accompanying constraint nearest to the entity.
11:28
Quite a contrary approach can be taken called look across and look across semantics as it's used in your email and many other types of modelling.
11:41
You read the currencies at the opposite end.
11:52
So in this case, I'll say that each person works in between one and one departments and each department is employing between nought and end persons.
11:55
Which one you choose is really up to you.
12:09
It's very similar to the notion of a distinction between big endian and little Indian representation of integers as a sequence of bias.
12:11
It makes no difference in terms of the expressiveness of the language.
12:23
So for binding relationships, look across and look at combinations of constraints are equally explosive.
12:27
The last basic air bonding construct I want to bring in is the notion of subsets.
12:34
And this states that one entity set is a pure is a subset of another entity set to you, spot this by having specialisation of nouns.
12:42
In this short piece of text, we got the statement.
12:53
Some employees are ranked as managers and receive a mobile phone, so managers here is a specialisation of employees, i.e. a subset.
12:56
And when they are specialised, we have the idea that those managers receive a mobile phone as a manager
13:08
because it's implied by this text text that every manager gets a mobile phone.
13:15
Let's try out a quiz question, we've got two subsets of of an entity which is permitted what is not a possible extent of a person and engineer.
13:24
By far the most popular answer C, and indeed, that is the correct answer.
13:42
The reason why C is not valid is John has been noted as being an instance of the engineer but does not appear as an instance of a person.
13:47
But here we have the idea that engineers are a subset of persons.
13:58
It is quite permitted, for an instance, to appear in both subsets.
14:03
So for example, Jane appearing in person is Jane to appear in engineer and in management, so it would be a valid answer.
14:08
When you design air models, it's quite permissible and sensible for you to go around looking at different aspects of the universe of discourse,
14:24
modelling small subset flips and simply combine the fragments together.
14:32
So taken the different bits of example I've shown you so far and merging them together into one diagram and sharing the
14:37
same entity names between them so that each person appears in different fragments is represented as a single person,
14:46
each department as a single talent. I end up with the diagram shown here.
14:52
So so far, in summary, I've introduced the idea of entity and relationship modelling with attributes and the different notions of key attributes,
14:59
manufacturers and optional attributes. I can have subsets denoted between entities.
15:08
And you can have either look across or look here, commonality, constraints in general.
15:15
And this course we'll be using look here, complements constraints and you must use it in exercises for this course.
15:20
Right, you have enough information now, which is to design a neo model for the text given here.
15:31
I'll say to you in advance of actually alternative correct answers to this.
15:39
Don't worry if you think there might be alternatives to 219, things just draw a diagram which is valid as far as you're concerned.
15:43
If you want to, you can now pause this recording to do it, or you can wait at the end and do it after the remainder of the topic.
15:53
So assuming that you have designed and he asked scheme, you want to map it down to a relational database and this course,
16:04
we're going to be taking something called a table type approach.
16:12
There are alternatives to this, but for simplicity, we'll take what is the simplest scheme for modelling the PR model in a relational database?
16:16
And part of it is extremely simple, you take every entity that you have designed and create a corresponding table with the same name,
16:28
and you take each attribute of those entities and you make them a column of that corresponding relation.
16:36
If a is not built, then you make the column none at all.
16:45
Otherwise, the column is not valuable. And for all the key attributes, you make them the key of the corresponding relation.
16:50
So taking the two fragments, I started off with person with a key of salary number,
16:57
a name and not much bonus gives me persons a table with salary numbers of key names.
17:03
The mandatory boot and bonus does not much.
17:09
Boot department with single key attribute name gives me a table with a single column, which is a key of the department table.
17:12
The modelling of relationships is more complicated and varies, according to what is the car tonality constraints on the relationship.
17:26
Let's start off with one. One car analogy constraints on on a relationship,
17:37
which in this example here can be called a one many relationship because each
17:44
person is related to many departments and so and falls into category two up here.
17:50
And for those, what we do is model the relationship by taking the key of the entity at the other end from the one one.
17:58
So in this case, it would be the D9 and putting it into the table that corresponds to the entity that is at the one on one end.
18:08
And then we add a foreign key guy from the table four person to the Table four department.
18:16
So here we have a person with such name and bonus having DNA added as an extra attribute,
18:23
an extra column to the person for a relationship and a foreign key going from person dean name to department DNA.
18:30
And this completely implements the semantics of this one.
18:40
Many relationship because what in the model is stating that each person must be associated with exactly
18:44
one department becomes the fact that there must be a single department name in the relational database,
18:51
and that department name would appear as a key of the department table and therefore to note only one department.
18:58
So we end up with each person being related to one department.
19:07
Changed the culture now to constraints of this relationship from one one down to zero one.
19:12
And I simply make the D name actually become optional, which is the statement here that if the participation of the entity in life is optional,
19:19
then the key values added to the table for each one is an optional column of how one.
19:29
If you have a many, many relationship where both ends of the relationship are not end or one end of 19 constraint,
19:39
the mapping looks very different and you use option one in this table here.
19:48
So in particular, I create a new table with some name that indicates I'm talking about the relationship between one and two,
19:55
which contains the keys of the two tables.
20:05
So in this example, down here we have sorry number as the key of person and DNA as the key of department.
20:09
So I create a new table, let's call it works in with salary number and d name as the key of this new table.
20:17
Plus, we add in two foreign keys one which goes from this new table to the left hand side,
20:27
the the one case person and one which goes from the right hand attribute to the flattened entity, in this case, the department.
20:33
So notice again, we're going to now correctly implement the semantics of a many, many relationship.
20:45
For each instance of the works in relation, there must be a single person it's related to and a single day name,
20:53
but there's no restrictions here on how many salary numbers may appear and works in four different names.
21:02
And there's no restrictions on the number of names that may appear with them.
21:09
Two times a day may appear with different salary numbers. Subsets are mapped down to a relationship which implements the subset entity,
21:15
plus the fact that you take the key of the superset entity and put it into the subset entity.
21:32
So in the example here, person is the superset entity, and so number is its key.
21:41
And therefore, when we create a table for manager,
21:47
we add salary number into manager as its key and we add a foreign key which goes from manager to person.
21:50
And you'll see that this correctly implements the notion of subset because salary number
22:02
can only appear and etc. and we can only pay once a manager because it's the key manager.
22:07
And if that salary number is present the manager, then it must also appear in person and must also pay only once because it's also
22:13
the key of person and hence any manager will also be an instance of person.
22:22
But you can have some people who are not managers because there's no reason why you can't have a salary number appear in the person table,
22:29
but not in the manager table. All right, with that, you have enough information to take the model you created previously in the modelling.
22:36
E.R. K. L. M.O.s worksheet and map it into a relational schema.
22:50
And of course, the answer that you get for this might vary according to what the answer was you had for the original worksheet.
22:56