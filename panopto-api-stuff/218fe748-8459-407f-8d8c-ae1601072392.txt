ID: 218fe748-8459-407f-8d8c-ae1601072392
Title: 2.4 Trees, directed graphs
Category: COMP40008 - Graphs and Algorithms (Spring 2021-2022)
Lecturer: Iain Phillips
Date: 23/01/2021
Now I want to talk about trees.
0:01
So, first of all, let's define a rooted graph that is a graph G together it is a distinguished node of tree which we'll call the root of tree.
0:04
So in this graph on the left here, I've decided that this node here is the root.
0:15
And a tree now is in a cyclic, connected, rooted graph.
0:21
So if we think about what a tree is in nature, we can see that we don't want cycles in a tree.
0:27
That will be strange with the branches sort of reconnected after having divided.
0:34
And we want it to be connected. And we have a route which will be the the base of the tree.
0:40
And a non-routine tree is an a cyclic connected graph.
0:48
So if we we can still have a tree without a root node that's actually been mentioned and that will just have a cyclic and connected properties.
0:54
So trees may or may not be rooted and different authors have different conventions here.
1:04
And so I think you would just have to tell from the context whether there is a root node or not.
1:12
Now, an ice property of trees is that there is a unique, non-competing path between any two nodes.
1:18
And that's because two different paths would give a cycle. Let's have a diagram. So if we.
1:26
Have two nodes in a tree. We are X and Y.
1:36
And let's suppose there are two different paths. Here's a path. And here is another path from X to Y.
1:40
Then you can see that we have a cycle by following the first path and coming back on the second path.
1:48
Now, it might be that the two paths overlap to some extent.
1:54
So maybe this path diverges at that point there and goes off differently and then comes back to the main path again here.
1:59
But again, in this area here, we have a cycle as well.
2:09
So that will lead to a cycle. Now, we've said that trees are a cyclic.
2:13
And so that cannot happen. So this is a fundamental property of a tree that ferney two nodes.
2:19
There is a unique path between them.
2:26
OK. Well, then we can.
2:32
Make various further definitions about a tree will say that the death of a node is the distance along the unique path from the route to X.
2:37
So this node here is a depth to this one is at depth watton.
2:45
And we know that that's well defined because of this unique path property.
2:51
And if X is not the root, well, then we know that there is a path.
2:56
So we take this note here at the bottom, right? It's not the root node.
3:02
There is a unique path to the root. And we'll say that the next node along that path is the parent of X.
3:07
So if this is X, this is parent of X. And so that's a whole nother well-defined property.
3:15
Once we have a root node and the depth of a tree is the maximum of the depth of all its nodes.
3:22
So in this case, we can see that the nodes have got depth zero one or two.
3:28
And so the depth of this tree is to. Well, another fundamental property of trees is that a tree with end nodes has always got N minus one ox.
3:33
So let's prove this.
3:48
Well, we could prove it by induction and maybe I'll leave that for you to do as an exercise, but I'll prove it slightly differently.
3:49
Let's suppose what we can show is that there is a one to one correspondence between the ARC's and the non-routine nodes.
3:59
So here is a non root node X.
4:07
And here is the arc that joins X to its parent.
4:11
So what we can see is that any Arc A joins a unique non root node to its parent, the non root node, in this case, it being the X.
4:15
So let's define F of A to be X here. So that's well defined for each of the arcs in this diagram.
4:27
And conversely, if X is an en route node, then there's a unique arc which joins it to its parents over X.
4:37
That's a. Here. So let's define G of X to be a.
4:45
And clearly, F and G, our mutual inverses. So that means that we have actually got a bijection.
4:51
And therefore, there must be the same number of ARC's as there are non root nodes.
5:00
So in this case, there are six arcs. And there are six known root nodes when.
5:05
And therefore, obviously because we've got en route, then there are N minus one non root nodes.
5:11
And so therefore the must be N minus one ARC's. Well I did disproof using a root node.
5:17
But if you think about it, it will also hold for non-routine trees.
5:23
Trees I have to do is take an ASIC connected graph and just designate any note to be the root.
5:26
And then I could do this proof. So that gives us the result for the non-routine trees.
5:32
That's what. Right.
5:37
So now we can talk about spanning trees. So here is a graph in red at the top here.
5:43
And what we might want to do is to find a subnetwork.
5:50
This might be a network of cities connected by railway lines and maybe it's getting a bit expensive to maintain all these railway lines.
5:54
So we'd like to save money by closing some of them.
6:03
And so the question is, if we want to keep this graph connected, which railway lines can we get rid of and which do we need to keep?
6:07
So what we want to do in other ways is to find a sub graph, which is a tree and spans all the nodes.
6:17
Because if it's not a tree, then we could get rid of some of the arcs until it became a tree.
6:24
But we do need it to connect all the nodes together. So while here is the a possible answer, there might.
6:30
There's actually more than one answer here, but so we can get rid of this, OK,
6:38
here at the top, because we can still and we still have a connected diagram.
6:43
We can also get rid of this one here. And but now we're down to six arcs for the tree.
6:48
And if we got rid of any more, then we would disconnect the graph.
6:55
So this is the green is the spending tree, which is a sub graph, which is a tree and spans all the nodes.
7:00
So the motto for spanning trees is it's a lower cost network which still connects the nodes by lower cost.
7:07
I mean that we've got fewer Occident. So let's make a general definition.
7:14
If G is a graph, a non rooted treaty, because the spending treaty does not really have a route, there's no there's no designated node to be the route.
7:21
So a non-routine treaty is said to be a spanning tree for the graph.
7:31
If T spans the graph, i.e. T is a soft graph of G and the nodes of T are all the nodes of G and of course T as a tree as well.
7:35
Well, do spanning trees have to exist? And the answer is yes, if a graph is connected, then it has a spanning tree.
7:51
So let's prove that. So we're going to bar.
8:00
We're going to give a non-deterministic algorithm to find a spanning tree.
8:05
And it goes as follows. Well, if the graph has a cycle, see, then just remove any arc of the cycle.
8:10
So this is a non-deterministic algorithm because we can just choose any cycle and any arc within that cycle and then remove it.
8:18
So, for instance, here we have a cycle in blue. And we chose to remove this dotted line arc here from X to Y.
8:25
Well, that's okay, because we can still get between where the only connexion we lost was going directly from X to Y,
8:36
but because of the blue cycle, we can get two extra Y going the long way around the cycle.
8:44
So we haven't lost any connexions in the graph. And all nodes are still present in the graph.
8:49
We haven't removed any graph, any nodes. So that's okay. Well, all we have to do is keep on going doing this until all cycles are removed.
8:57
And then, of course, the graph will still be spanning. And it will be a cyclic because all the cycles have now been removed.
9:07
And so it will be a spanning tree. Well, why must this procedure terminate?
9:15
Well, because each time we remove an arc, we are removing a cycle, basically.
9:22
So we remove the blue cycle by doing this. And there's only a fixed number of cycles in the tree to start with.
9:29
So and that has to be greater than or equal to zero.
9:36
So therefore, this procedure must terminate. Well, we could argue on the number of arcs.
9:40
Each time we do the procedure, we're removing an arc.
9:46
And there's a fixed number of arcs to start with. And okay, we don't get down to zero arcs, but we get down to N minus one arcs.
9:49
And then the procedure terminates. And we have the spanning tree.
9:57
Well, just to point out, it's pretty obvious, but spanning trees are not necessarily unique.
10:04
That procedure I gave was a non-deterministic procedure after all.
10:08
So in the case, for instance, of this graph here we have these two are both spanning trees, but they are different.
10:13
Groff's different. Some Groff's. On the other hand, what we do know, of course,
10:24
is that only two spanning trees for the same graph within nodes must have the same number of arcs, namely N minus one.
10:28
So I'll finish this section by just briefly talking about and directed graphs.
10:39
So far we've just considered undirected graphs. But for many applications, it makes sense for Ox to be directed.
10:45
So let's define a directed graph to be a set of nodes and and a set of arcs,
10:56
a. such that each arc is associated with an ordered pair of nodes, namely the end points.
11:03
So this is just the same as for undirected, except instead of having an unordered pair.
11:12
We now have an ordered pair of nodes. So let's just move that up there.
11:17
So if we directed graph, you've probably seen examples already.
11:28
We're going to draw. The ARC's with arrows to represent the direction.
11:37
We could have Lou slike that. And so in diagrams, the arcs are shown with an area from the source.
11:44
No, to the target node. So one here is the source node of this arc, and two is the target node and a path in a directly graph.
11:56
Obviously, we have to match up the source and the target.
12:05
So we can have a path going from one to four here, one to four like that.
12:09
But obviously we don't say we don't have a path going from three to four because we have to follow the direction of the arrows.
12:17
And if there is at most one hour from X to Y, then we can refer to this OK, as X, Y, the ordered pair.
12:26
Well, what about degrees in a directed graph?
12:42
We have to be a bit different here because we've got ARC's entering node and also leaving it so well, let's split the degree into two components.
12:45
The end degree is the number of arcs entering X.
12:57
So in the case of one, the ID degree is zero and the out degrees, the number of arcs leaving X, so one has an out degree of one and two here.
13:00
What we've got two arcs going in, so it's got in degree of two and we've got three arcs leaving.
13:12
So it's got an out degree of three. OK.
13:20
And then for undirected graphs, we had we. We said that the sum of the degrees would be twice the number of ARC's.
13:25
And here in the direct graph scenario, we can say that the sum of the in degrees of all the nodes will be equal to the sum of the out degrees.
13:32
Because each arc contributes,
13:41
wants to the in degree and wants to the out degree what it contributes at its source to the out degree and at its target to the degree.
13:42
And that should just be equal to the number of ARC's. So we can say in this diagram we've got four arcs.
13:52
And therefore the sum of the Integrys must be four, which must be the sum at the out degrees as well.
13:58
OK, well, then what about connected nurse in a directed graph?
14:06
We said that in an undirected graph. There has to be a path from any X to any other any other node from any.
14:12
No. To any other node. So let's define for a director graph a direct graph to be strongly connected.
14:19
If any pair of nose X and Y, there is a path from X to Y.
14:25
So you notice that we need bells going in both directions from X to Y and Y two X.
14:31
So you might think that this graph is connected because if we took off the arrows, it would be connected graph.
14:36
But it's not strongly connected by this definition because I can get from one to every other node I can get from.
14:44
But I can't get from, for instance, from two to one.
14:54
So this is not a strongly connected graph.
14:58
Well, okay, so within this course, I'm going to be mostly sticking to two.
15:05
Undirected graphs, but sometimes I will use directed graphs.
15:16
So let's assume that a graph is undirected unless we state that it is directed now elsewhere.
15:21
The focus might be more undirected graphs. And so a convention might be the opposite.
15:29