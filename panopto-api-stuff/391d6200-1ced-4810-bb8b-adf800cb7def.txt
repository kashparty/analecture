ID: 391d6200-1ced-4810-bb8b-adf800cb7def
Title: idb-topic-13-datalog-ra
Category: COMP40007 - Introduction to Databases (Autumn 2021-2022)
Lecturer: Peter McBrien
Date: 08/12/2021
In this topic, we look at how we can regard data, look as an implementation of the relational algebra.
0:01
And we'll do this by going through the five primitive operators of the relation algebra and show how to express them in data log,
0:09
starting with projection. This is simple to achieve by naming the variables corresponding to the positions of the relation that you wish to project.
0:16
So, for example, if I want to project source code from the account table,
0:27
I take the softcover go in the position of the source code attribute and name.
0:32
That's the variable I want to return in the head of the title role.
0:38
And of course, for the example data I have, I get back the result 34, 56 and 67.
0:42
And notice, like in data in relation to data lock, is a set based language, so I do not get duplicate results being returned.
0:48
For selection, I can put in simple comparison predicates inside the relation.
1:00
So if I wanted to select the amount of quotes in the thousand from the movement relation,
1:06
I would name variables for each of the attribute positions and for those attributes I want to do a selection on.
1:12
I put in the corresponding printed quotes afterwards and therefore get be turned back the filter results from the movement tables.
1:19
In this case, I end up with just four lines being returned for the cases where the amount is greater than the thousand.
1:27
Cartesian product involves naming two products in the royal body into two, a pure Cartesian product,
1:37
you should ensure the variable names are not shared between those two relations.
1:43
So here wants to a Cartesian product between the branch and the count.
1:48
I want to filter down the account table to only include those entries where the rate is greater than zero,
1:52
and I ensure that I will be turning the two different Saltcoats and branch and form account by having differently named variables.
1:57
And I get the results listed here,
2:07
which is equivalent to the result for the sanctuary I presented much earlier for the relational algebra in the relation algebra topic.
2:09
And, of course, from Cartesian product, one can define a join and to do a joint, it's equivalent to doing the Cartesian product with a selection.
2:20
Compare a patch between the two different relations afterwards. And that not to me, is just adding in that comparison protocols.
2:30
After I've done the Cartesian product between the relations and to save time,
2:37
I can use the same variable name in the two relations to achieve the joint.
2:42
So up here we have a decode piece of code and a source code and later on ensure that they are equivalent was in the shorter version.
2:47
We just have a single source code variable.
2:57
And this ensures that we only match accounts which have the same sort code as that which appears in the branch table.
3:00
Let's just consider what happens when we named the same predict more than once in the rule.
3:10
Most popular answer was B, and that is indeed the correct answer.
3:22
And what you should consider here is that the account protocol has been named twice with different variables for the account.
3:27
But the same variable for the customer name.
3:35
And that means that where I will match against a deposit account for a given customer name on the first line,
3:38
I will then on the second line match against the current account for the same custom name and hence get
3:45
the answers that O'Brien has the hundreds and hundreds of one and put it in a 607 and one one nine,
3:52
and Bailey and Boyd are being ignored. Union is achieved by having more than one rule for a given predicate.
3:58
So if I want to do the union between the movements, which have an amount greater than the thousand and the movements which have an amount less than
4:14
2000 for the first part of the union can be written using the first definition of big movement,
4:21
where I'm filtering out the movements of those amount of questions thousand and the second crack of two.
4:28
It gives the second part of the union feel to announce where the amounts are less than 100.
4:33
And I end up given the listing here, which has both the large credits and large debits in the bank.
4:39
Considering that this now look at a relation of algebra.
4:50
Brawl and consider which one of the following four data lock programmes is not equivalent to the relation to expression.
4:56
And most pop ups received indeed is the correct answer.
5:12
And that is because C is in a union between the branch names in the first case and in the second case, the branch names which have deposit accounts,
5:15
which of course, amounts to having all of the branch names, whereas all of the three other cases are in a different way doing the joint.
5:25
The first one is the most direct one named source code as appearing in both the
5:34
account and the branch table and projects Appleby name in the second case.
5:39
I have separate source code variables in the branch and account table and later equate them.
5:44
And in the third case, I have a separate, separate sub query, so to speak, of sub predicate,
5:49
while identify the deposit accounts as those accounts which have a type deposit and then join between them to get the result of the query.
5:55
And to finish, I need to look at a difference and that is achieved using relational algebra,
6:07
a negation where the things are taken away from the left hand side of the difference need to peer inside without the negation,
6:13
with variable names corresponding to the positions of what is meant to be done as a difference.
6:22
So here I've got to account number is equivalent to the right hand of the left hand of the difference.
6:29
Movement number is equivalent to the left hand of the difference and put it in negation.
6:37
In terms of the movement, there does a difference between them instead of a joint and for the current data that would give me that.
6:42
So I've got a dormant account of number one two five. All right.
6:49
That's you've got enough information to the next worksheet, which is on data log and its correspondence with the nation algebra.
6:53