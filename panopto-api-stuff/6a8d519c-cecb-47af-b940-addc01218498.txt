ID: 6a8d519c-cecb-47af-b940-addc01218498
Title: L08-L09 - Live Q&A (part 1)
Category: COMP40001 - Introduction to Computer Systems (Autumn 2021-2022)
Lecturer: Lluis Vilanova
Date: 10/11/2021
It's all one and did to sorry, they're not.
0:02
No, but that's exactly what it's referring to. This is kill one that we properly named here and this is D1 and D2.
0:06
Oh, I should say this lights so that this is a lot clearer.
0:16
Yeah, I think that you analysed all of the numbers by inputting all the zero ones.
0:22
Yeah. All right, thank you. We kind of are right.
0:29
These are all the possible states of the of the flipped Q flip flops.
0:33
Yeah. So we are basically saying the circuits that we have on the input, they have to do whatever it is that we have in this table.
0:38
Yes. So your ability on the transition table by all.
0:47
Like how you will make the sequence, is it? Yeah, exactly, that's exactly the state transition that we showed here.
0:52
All right. One two three zero. And that's exactly what we're writing here.
1:01
Zero goes to one zero one goes to one zero one zero goes to one one and one one goes to zero zero.
1:05
Now each of them, the one and the two is a separate circuit because we have one circuit for it.
1:14
One combination will come into our circuit for each of their flip flops.
1:19
So it's Q1 with the yuan and Q2 with the two. All right.
1:26
Thank you. Yeah, I hope that now all feeds in place.
1:31
Yeah. Everything OK. That's right.
1:36
That's right. And that's exactly what we're doing here.
1:40
Then we just joined the circuit that we got from the transition to rebuild and granola, then the Boolean equation.
1:43
And finally, this is a good representation of that will be an equation.
1:54
And that's basically I mean, it's just more complicating this thing, but that's that's the basic.
1:59
Idea, it's not more it's really not more than that, it's just that, well, then how do we get fancier with more space and time and women?
2:07
OK, let me pull up the team's window, let's see if there's any question I see and you have your hand raised.
2:20
Yeah, it was in lecture eight. Slide 13 to do with D-type large.
2:28
I didn't quite get when you said it latches onto the value, would it be possible for you to go over again?
2:34
Oh, OK. So this was just for you to remember and kind of have a mnemonic for what large and.
2:39
Mean so large. It's a word that means to grab onto something, right?
2:47
Kind of. So that's what it does. When we set it to one, it latches onto what's happening.
2:54
Unlike the previous value, because I think you went through there was a problem. So then I think Slide 19.
3:07
Nineteen, let's say what's 19 talking about, yes. Exactly.
3:16
So that's that's the problem we have the large.
3:22
We latch on to anything when it's one, when it's one, it will output whatever it has on the input,
3:28
it will transfer it into the output and when it goes to zero, it stops doing that and then it goes back to one.
3:37
It starts doing that again. What this means is that.
3:44
What's useful to us is when we transition from one to zero, that's when we figure the value.
3:49
Right. Yeah, because the the problem is that for the whole time in which we are at one.
4:01
Signals are changing, like if the input is changing, the output is going to be changing like crazy, right, because it's just going to go through.
4:07
So that's not, I mean, that's complicated to to to take into account.
4:16
We really want to have memory that it's like I saw something and it stays there.
4:22
And when I want to start something new, I will have the new value, but not craziness in between.
4:27
And that's exactly what we analyse here with this time diagram.
4:32
And then we start building here with its triggering is saying, OK,
4:39
I will only grab the input value when I move that the clock signal from one to zero.
4:43
That's a and it's going down.
4:55
Or or we can also design circuits with the edge going up.
4:59
It doesn't really matter. OK. All right.
5:05
That makes a lot more sense. Thank you. Let's see, is there any other question?
5:09
Oh, I see there's some text is the same. Oh, true.
5:21
Sorry, I totally forgot about. Wait, is it recording now?
5:27
Yes, it is. OK. I think that one of you started recording.
5:34
Great. Thanks very much for that. They totally forgot about it.
5:40
Is there any other question? Can you exploit that limitation of the D-type large?
5:46
Which was from lecture eight, I think was the slight lot like literally the next slides,
5:57
you explained a couple of minutes, I think, after the proper break.
6:02
Yes. That's the site after a break, I think.
6:09
Yeah, that's exactly what we were discussing like a few seconds ago.
6:14
It's that when the the clock, when the lights failure in here goes to one,
6:21
it goes into this, let's say, transparent that anything that is and goes into Q.
6:32
So we have one zero one. We see one zero one.
6:38
Then when it goes to zero, it latches onto that last input failure and keeps it on the output so it will maintain that one.
6:43
And then when the light goes back into one, we will start getting into Q without any problem.
6:53
So it's one zero zero and then we see one zero zero in the output.
7:00
Now that is a problem because. We see this odd change here, like what we probably won't hear is.
7:05
OK, I have a zero signal, but I keep it in in in these detect latch, which, as we said, acts as a one bit memory.
7:14
And at some point in the future, I want to start one or I change the to one and I want to store it.
7:30
But there's this odd thing in here, this transition here that Cuba was previously starting one, then when a historic peace deal won here.
7:39
There's this transition here because remember, we draw the signals in this square thing,
7:48
but things shift back and forth and there is noise and all of that.
7:55
So we want we want to remove all this uncertainty.
7:58
From the circus. And that is why build this more complicated flip-flop,
8:06
which is basically using the two of the latches to make sure that data is transferred only in very well known point in time.
8:14
So how does this how does this later edge edge triggering reduces the uncertainty of memory because we have this here so.
8:28
We. What we are achieving here with this flip-flop is that this is a it's going on, it's triggered and it's with when the edge goes down.
8:41
So it means that only when the clock goes from one to zero, we are going to take the value of Dean.
8:54
I'm sorry. Thank you. Any other time we will just might take you.
9:01
We thought it's triggering. I am.
9:08
That the lunch is one we read, the dean put and passed it on to Q, and only when the light is zero,
9:14
we maintain Q so that when this is one, any change in Dean is going to be seen in Q.
9:24
We don't have a time in which one very precise time in which we say, Oh, now I'm taking the.
9:32
Put it into queue and then maintaining it. You said saw O'Sullivan queues in the Staples Staples state when the lights.
9:38
Exactly, exactly. Because otherwise, if it's moving around, it means that.
9:49
Every anything that this is connected into will see those changes, and that's not necessarily what we want.
9:57
I understand large as a trigger to tell the to tell of memory cue like with youshould story.
10:03
Yes. And basically, here we are saying, Oh, I'm going to store the in the queue whenever it's one.
10:09
And then maintaining whatever it zero, but well, it's going to be one for quite a while and everything.
10:17
I'm going to be stirring continuously multiple values if the the input changes and then with its triggering,
10:24
we're saying I'm going to store that the input into Q only in this very small point in time where you go from one to zero.
10:30
Oh, right, OK. I think this this is the key, this is the most complicated part of this week.
10:40
Basically, it's these one point, but let's see for the not large.
10:49
Sorry, say again, see when you like the gates locks, the gates is safe, like it's the same edge triggering site.
10:55
So when you look at the gates that large volumes, so it begins, just tell us you are now storing the key values, pass out with it.
11:04
The first step, but it's a bit of your story in different parts.
11:17
It's not that you're stirring different parts, you're kind of filtering the signal in stages.
11:27
I mean, that's how I understand it. Or one way in which I conceptualise this.
11:33
So basically, we have zero zero zero one one one zero zero and then the opposite because it's negated.
11:39
Now we take this remember a simple lunch?
11:45
D-type lunch will. Maintain its value one zero and take new values when it's one.
11:51
So here it's zero in the first Blue Origin. So.
11:58
We maintain whatever it was, the previous well, let's assume zero, and then it goes to one,
12:04
so we just take the as it comes and then we go back to zero, so we will maintain the lost value of the.
12:10
And that's what we are going to be doing here, right? And.
12:19
Now this is going to be stable because the clock is zero, so we are not going to be reading this anymore.
12:25
But with these other lines, what we are saying is like, Oh, just.
12:33
Spit out when we said it here to one is spit out whatever this is in the from here on until it goes back to zero.
12:38
And since this one is already lodged, we are going to spit out the old time this one over here.
12:49
So basically, we have an includes Congress, as we have on inputs, which is the last two digits of the.
13:00
I mean, it's the last two digits, because that's how much time we're showing, but yes. Oh, but like because so it's so sorry.
13:11
I will I will check the recordings if that was not clear enough, but this is over time.
13:23
It's not a binary number that we are taking some parts and not others.
13:32
This is this means that every new digit is one new, let's say, time step, and this is how it evolves over time.
13:36
Yes, so we understand it has two doors and like there's a left door and the right
13:45
door when you open up the loft door and to close the rice door accountant,
13:52
well, Store B turns on them. And when you switch again to or close and the right door open and the guy's exactly that, that's exactly.
13:58
Yes.
14:08
We are kind of dropping the signal in between these two lunches and then when we open the right door, there's only one signal when that door is open.
14:10
So that's the only thing that we are going to be ringing out. Yeah, yeah.
14:23
That thinking of it as doors and being trapped in some kind of corridor in between the two latches is a good way of thinking about it.
14:27
So to account in the world only 10, 20, when it wind a large change from one signal to another.
14:40
And that's the time the door switch between. So when L is one, the door is open.
14:47
And when L goes to zero, the door closes and whatever is in queue will stay in queue because we have a flip between two door.
14:58
So when the left door is open, the right door must be closed.
15:08
The opposite. So we can exactly because there's this character here who goes inside between those two doors.
15:12
Mm-Hmm. That's correct. Yeah, thanks to this. Let me take those questions and speak up if you have any other.
15:22
Yeah, that's I hope it's much clearer is that if there's no other questions.
15:49
Then we we will go into a tutorial which is basically doing exercises on this.
15:55
It's nothing more than that, but it's a way to make sure that all this knowledge is.
16:04
Yeah. Well, Putin is well understood.
16:11
So, OK, now it's 11:33. We are finishing in one hour the class minus three minutes.
16:16
So let's meet back here in the general channel. At.
16:29
12. Let me say so that you have enough time, let's say, 12, 15, we will have a bit shorter Q&A after the trial,
16:36
but hopefully this is going to give you enough time to work on it.
16:46
As I said, this is one of their complicated tutorials plus lectures to feel free to ask questions.
16:49
We will come by your group channel and discuss any questions you have.
16:56
So again, go back to go to your assigned channels and please let's meet back at 12 15 back here in the general channel.
17:02
OK, so you know.
17:12