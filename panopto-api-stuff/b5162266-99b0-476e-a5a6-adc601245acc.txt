ID: b5162266-99b0-476e-a5a6-adc601245acc
Title: L05 - The canonical forms of combinational circuits and their minimisation (part 2)
Category: COMP40001 - Introduction to Computer Systems (Autumn 2021-2022)
Lecturer: Lluis Vilanova
Date: 19/10/2021
All right, so welcome to our second part of the fifth lecture on colonial forms of communitarian attitudes and minimisation.
0:09
And as I said on the previous part,
0:17
what we are going to look at right now is how to given the what we just learnt about combinatorial circuits and their canonical forms,
0:19
how to minimise circuit, because what we know so far is not enough to get the minimal circuit,
0:30
which is what we want to make the computer more a possible computer or circuit, more cost efficient by minimising the number of gates we need.
0:37
So as I just said, we are with many musicians that the whole point of final target is to find the minimum set of Gates to implement it.
0:46
So once we have a brilliant equation in canonical form, we are going to apply what we are going to see next in order to find this minimal.
1:00
But as we are going to see, unless we have some very strict rules on how to do it, this is not an easy task.
1:10
So let's look again at the majority of the voter that we had and we obtain.
1:20
That this is the canonical minturn form for that bullying and the bullying equation in canonical form for that second.
1:28
So what we can do to find the minimal circuit is apply again, all the rules that we already learnt for boolean equations.
1:41
So in this case, we can use factorisation, which is the opposite of what we described before, is the opposite of a condition.
1:49
So we can hear factories, uh, see from a from this to mean terms over here, we factories the the seat out of it.
1:58
Then we know that we can simply this is always one so we can remove it.
2:13
And here we have a smaller equation that of course we'll use less gaits.
2:18
So apparently this is as far as we can go.
2:25
But well, in fact it is not. And this is where it becomes more complicated.
2:30
So something that we could do instead is at this over here.
2:37
Which maintains the equation.
2:45
It maintains the meaning of the equation because we are just honouring this term with itself, so that's always going to be the same as this term.
2:49
And now that we have these additional midterms here, we can do even more factorisation that we could not do before.
3:01
And with this, we finally can get the simplest equation to have the smallest possible circuit design for this equation,
3:13
starting an equation that we have over here. Now, these these days can get quite tricky, especially as the equations become more and more complicated.
3:26
And we cannot expect that everyone will have enough time to find such a solution because it can take quite a lot
3:39
of time trying via trial and error until we find a set of factorisation that will result in the minimal equation.
3:48
And also using this method doesn't really tell us if we reached the minimal equation.
3:59
And this is why what we are going to do, something that is called the Cardinal Maps,
4:07
which help us in doing this factorisation steps in a much more organised way so that by definition
4:12
we are always going to be able to obtain the minimal equation or circuit and actonel map.
4:22
As we will see. You know, it's basically a truth table built or written out in a very particular way.
4:30
So let's go back to our majority vote, for example, with A, B and C as inputs, and we can build a Carnamah,
4:40
which again is a truth table in this way in in a we are going to have in the rules.
4:49
We are going to have one party rule, which is eight. And then in the columns, we are going to have the other two input variables, B and C.
4:55
What is important to note here is that as we move. One to one side or the other of the columns, only one of the bits is changing at each step.
5:04
And this is important because this is what's going to allow us to use this kernel,
5:19
so we have to lay it out such that this rule is always followed, only one bit is changing whenever we change column positions in the Carnamah.
5:28
And the same applies to rules, so here we have three possible majority holders, this will be the norm up for two variables,
5:40
A and B, and this would be the current one that we just saw for A, B and C, three input values for the majority circuit.
5:50
And this would be exactly the equivalent or the appropriate Carnamah for for input variables A, B, C and D.
5:59
And again, what we did here is that as we move through the rules or the columns, only one bit is changing at each of the steps.
6:11
OK, so now we know perfectly well how to build these criminal maps with any number of variables because,
6:22
of course, we could have five by adding one more here, one more here.
6:29
Over here or over here, it doesn't really matter.
6:36
And so forth. And what we are going to see now is how we can use this gurnam up to do these factorisation operations in an ultimate
6:41
and semi automated way to make it in the sense that it has very clear rules that if we are following very strictly,
6:53
we know we will reach the correct solution.
7:03
And what we're going to do is basically find once in this truth table, in this Carnamah that are together and circle them.
7:08
And in this case, this corresponds to a condition in which both B and C are one regardless of age,
7:19
because we have we are circling and this example, one single column where B and C are one and we are extending over to rows where A is changing.
7:28
So the factorisation. Or the equation expressed by this circle over here would be B and C equals one on the output because remember,
7:40
this is the output values of the circuit according to the table.
7:53
Excellent. So just to make sure that we understood this,
8:00
let's now look at the different example of the Arabian Sea with a different granola or also table in the corner of my ship.
8:05
In this case, we have two of them, two circles over here that we cover, all the ones in this current map.
8:15
And the question is, what conditions are represented by these two circles in here?
8:23
I'll give you some time and then we will look at the at answer. Great, I'm I'm sure you've got it right and precisely.
8:30
What is always the same is in this one, A is always zero, and in this one, B is always one, while C is changing over here, as you can see.
8:41
So this upper circle would be the equation, not A and B equals one.
8:59
And for the other circle, we just have to look again, what we are covering in in this we see that A is always one.
9:05
So it's eight and what's always one here, the C, which is the two ones over here.
9:12
So the equation for the second circle would be A and C equals one, right.
9:21
So now let's keep on going with more things to take into account in grown ups.
9:28
So I was I was I was just saying these circles that we draw on Guerrino maps
9:35
indicate the factorisation on the canonical equation that we started from.
9:41
And each of the circles will be represented by one term in the minimised equation, as we will see now.
9:48
Again, in this case, B. Here is always one and A here is always one.
9:57
So these are the two terms that we are factorisation with this Colonel Matt.
10:03
And of course,
10:09
the objective here is to first make circles as big as possible with the ones that are grouped together and to cover all the ones in the map.
10:11
We cannot finish. And until all these ones are covered and we have to make sure that they are all the circles that are
10:24
as big as possible in order to find the minimised equation to build the smallest possible circuit.
10:32
So in this case, to work with this Carnamah, we would have to do all these many different circles here.
10:41
Now, as I was saying, of course, somebody could say, well, why don't I just take this as a circle?
10:50
The reason is that this is not the largest possible circle in this group of once the largest possible one.
10:55
Is this over here?
11:02
And what we also have to take into account is that they have to be powers of two on each of the X and Y dimensions as we will select.
11:05
So as each of these circles is going to represent a valid factorisation of the canonical Maxtor form,
11:19
if the circle covers only once and as I just said, the circle extent, the whole big it is on each of the two directions is a power of two.
11:27
So we can have one by one circles, one by two, two by two, two by one.
11:39
It doesn't really matter the other on each of the directions, etc. as long as they are powers of of two.
11:46
So therefore three is not valid.
11:55
An extent of three columns of rows is never valid because that is not a power of two.
11:59
And, uh, just to, uh. Clarify or reinstate what I just said, the circles have to be as large as possible.
12:05
So now let's look at how to find this minimise circuit in this case, just to restate it,
12:19
we have to cover all the ones in this Carnamah with circles and none of the zeros.
12:27
There cannot be any zero inside these circles.
12:35
And, of course, as you will see, you can see in this example one of the ones of this output, uh, equation.
12:40
Of the optative of this equation can be covered by more than one circle.
12:50
That's perfectly fine and that is part of the process of Curnoe maps.
12:54
So whenever we found all this possible circus, the largest possible uncovering all the ones and none of the zeros,
13:01
we are just going to take each of these circles and break down the the term that corresponds to each of them.
13:09
So this would be sending these one would be handy and this one would be A and B and so forth.
13:17
Now, once we have all of them, we just write down the equation.
13:24
As a disjunction of conjunctions, because we have this each of these separate terms as US conjunctions,
13:31
as I was saying, and we just put the forth the destruction in here.
13:39
And with this, we just found the minimised equation,
13:46
which is the one we can use to build the smallest if we just think this is going to be the smallest circuit for this one to a stable or normal.
13:49
Now, what happens with cycles,
14:01
remember that I said in the beginning or earlier on that columns and rows of the
14:05
Carnamah have to be placed in such a way that as we move through them on each step,
14:12
there's only one bit changing.
14:19
As you can see, here we go, this one goes from zero to one, but not we could not go from zero one to one zero because there would be two of them.
14:22
And that would basically lead to problems where we cannot circle.
14:33
We're going to make the larger circles. We would have a large amount of small circles instead.
14:38
So what we have to look for is having them as with as large as possible groups.
14:45
So the order in which we set up the columns and rows then will affect how easy it can be to spot the factorisation in the map.
14:55
So we have to be careful with that. Now, of course, since the order in which we send them doesn't really matter, we can play around.
15:08
In such a way that these are basically equivalent circles, just as as I said much earlier.
15:24
Lecture. This case is the same we can circle back from one end to the other, like in Buchmann.
15:36
So in this case,
15:46
this is these two pieces over here are the same circle because they go off the table and continue on the other side of that road or kill them.
15:47
So this is perfectly valid and this is a way to make these groups larger in the chromo.
15:58
Now, something else that we will often have in circuits is what is called as Donkers,
16:05
and we will see that this often happens in digital circuit design because we know that some set of input combinations in that cell will never occur.
16:13
So in that case, we will mark that on the road map with a Duncker value, neither zero nor one which is usually written down as index.
16:25
And let me explain very briefly an example where that would happen.
16:34
So imagine that we have some critical mission computer with that has to perform some
16:38
operation that tells us one or zero whether we have to do or not do something.
16:47
But this machine, like, for example, could be a space shuttle is so critical that we want to make sure that the result is always correct,
16:53
because if we look down at the physics of circuits, sometimes there can be some rays, some photons that go into a circuit and flip a bit,
17:02
not because we are telling it to, but just because the charge of an electron changes and all of a sudden something that was zero becomes one
17:15
or something that was one becomes zero since we want to avoid that one when the result is very critical.
17:24
What we can do sometimes is have multiple circuits that will always implement the same logic.
17:31
So in this case, it would be exactly the majority builder that is used in planes and also in space shuttles and so forth.
17:38
We would have three different circuits that implement exactly the same.
17:46
And then there's a majority vote to decide whether the result is really one or two or not.
17:50
And in this case, we could know that only one of the circuits is ever going to fail, but not all of them at the same time.
17:58
That would be the proportion of cases in which this happens is so low that we can just ignore it.
18:05
So we know that the zero zero zero input, the case where nobody votes in is never going to happen, for example.
18:12
And that would be a case for I don't care. So this is how we would break up with Donkers, we would simply put Xs here.
18:22
Now what happens with Xs is, as I said, it's a duncker.
18:33
So we can use them as either zeros or ones when doing the circles in whichever way is
18:37
more is better for us to make the least amount of circles and the largest of them.
18:45
So in this case I was I was just saying we know here that zero zero zero zero is never going to occur and zero one zero zero is never going to occur,
18:53
which corresponds to these two X's. So what we're going to do here is, for example, this is a very large four by two group.
19:01
So remember, this is the power of two. And in this case, the term would be being then we would do all the other circles.
19:10
Remember, the same output and the same one can be in more than one circle.
19:18
And we are never circling zeros because this is an X that in this case we decided to count as if it was a one.
19:24
But in this other case, it's not very helpful to take this as a one.
19:31
So we are going to assume that it's a zero so that we can have the least amount and the biggest circles we can in this granola.
19:35
So once we have this dunkers, this can make this can allow us to make very considerable simplifications on the circuit when applying these techniques.
19:44
So we should always be aware of whatever I don't care needs to happen because it will allow our people to be much safer.
19:57
And with this, we know are already experts on how to build,
20:06
how to start from an initial equation and build the minimal circuit that would implement
20:11
that equation by following all the steps that we discussed in the last two lectures,
20:20
lecture number four on lecture number five and the same way around, we can take a circuit, built an equation or stable for it,
20:26
then apply the kernel techniques that the technique that we just saw and then derive from it another circuit that we are for sure.
20:34
We know for sure that is going to be the minimal.
20:45
So we can also go from an existing circuit and develop a new one that is going to be either the same or smaller.
20:47
And with this, I will see you on the next lecture, but.
20:55