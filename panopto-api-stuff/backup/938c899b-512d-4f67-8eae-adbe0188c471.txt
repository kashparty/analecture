ID: 938c899b-512d-4f67-8eae-adbe0188c471
Title: L02 - Binary arithmetic (part 2)
Category: COMP40001 - Introduction to Computer Systems (Autumn 2021-2022)
Lecturer: Lluis Vilanova
Date: 12/10/2021
Hello and welcome back to the second lecture of introduction to computer systems, where we are talking about binary arithmetic operations.
0:07
So remember that we just saw how to perform arithmetic operations on unsign binary numbers.
0:15
And what we are going to look into in the second part is how to perform operations on sine binary numbers.
0:20
And more specifically, we're going to be looking at to complement representation because it's the one that is used more commonly on computers.
0:28
And before we start looking at the specifics of these operations,
0:38
Ringold that addition and subtraction using that to complement representation works without having to fiddle or take care of saying integration bits.
0:42
Yeah, thanks to Hulda to complement representation works.
0:55
And what we are going to see is that in some cases we will have what is called an overflow situation.
0:59
And this happens whenever the result of an automatic operation is either too large or too small
1:06
to fit in the binary representation that we are using in the number of seats we're using.
1:12
So, for example, if are using it to complement with only four bits and the result of an operation is the decimal number nine,
1:18
we obviously cannot fit this and it means that we had an overflow situation when performing that arithmetic operation.
1:26
And whenever that happens in a computer, it's usually left up to the programmer to decide what to do in such a situation.
1:36
So let's start with the simplest operation here, which is the addition.
1:46
So what we are going to do is basically take the two values that we are and we want to add together to use
1:53
the technique that we already learnt for unsigned integer integers and discard any Carryl that we could have.
1:59
So, for example, if we adhere to the number three and number minus eight, we do the addition, as we already know, and the result is minus five.
2:07
Then if we look at another example with again, with eight bits,
2:20
if we are thinking minus two and adding it to minus five, that would result in minus seven.
2:24
And this can really be that we have over here, we can safely discarded because the result is just correct.
2:32
So now let's look at what exactly overflow is going to happen,
2:42
and the simple definition is that this will happen if and only if two numbers and to complement representation or other.
2:48
And they both have the same time, either positive or negative, and the result has the opposite side.
2:57
So basically this means that adding to positive numbers must always obviously give a positive result
3:05
in when we are working in decimal and adding to negative numbers always has to give a negative result.
3:13
And what we will see is that overflows will never happen whenever we are adding to Oberon's with different signs.
3:20
So the cases in which will an overflow will happen.
3:28
We can summarise them here and it would be whenever we have plus A plus plus B and result in the representation would correspond to minority.
3:32
Or if we have minus eight plus or minus B and the resulting representation tells us that the result is plus in both cases,
3:43
these shows us that there's been an overflow situation.
3:51
So let's look an example, a very quick and simple one here, we have to forbid the numbers into his compliments or remember,
3:57
the representation ranges from minus decimal eight to plus decimal seven.
4:05
And we want to calculate minus seven, plus minus six, which should be minus 13.
4:12
So here we put the two numbers on separate rows.
4:20
We do the addition, as we know, and we have one carry out a bit here that we have to discard.
4:25
But as we can see, these numbers excuse me, this number is negative.
4:32
This one is negative, but this one is positive. Three, therefore, we know that we had an overflow situation in this example.
4:38
So now let's look at how to perform subtraction with the juice complement of representation.
4:49
And this can be accomplished very easily by simply negating the sub to him and then adding it back into the menu.
4:55
And with this addition, just as we did before, we will discard any result that we have.
5:05
So, for example, if we want to calculate eight minus five using a bit and just complement representation.
5:12
This is equivalent to having eight plus minus five.
5:23
So what we are going to have here is data, as I said to him, we are going to negate it and then do a simple addition and discard the real beat.
5:26
And then we are done with the subtraction. So let's hear when subtractions can result in an overflow situation,
5:38
and this is if and only if two numbers that we are having in total complement representation are subtracted and their signs are different,
5:49
but the result has the same same as the subtrend.
6:01
So, for example, if we have a plus, a minus minus being on the result is minus seeing this would be a case for an overflow.
6:04
And if we have minus A minus plus B equals plus, see, that would also be case for overflow.
6:14
And remember that if we play around a bit very easily with science, we can simply express these plus a.
6:22
Plus. Plus, being.
6:31
Equals amnesty. And as we know from before, this is a case where an overflow in addition,
6:36
which is exactly what we are doing in a subtraction after doing the after negating this operation.
6:42
And the next thing, the second example would be exactly the same.
6:49
We would have minus a. Plus minus being.
6:53
Equals policy. This is obviously a case for an overflow again.
7:01
So let's see a very simple example with, again,
7:08
two numbers with forbids using just complement representation and we want to calculate seven minus minus six.
7:15
So here we have the original numbers. We, first of all, negate the sceptre him and then perform regular additions.
7:23
And as we can see here, there's been an.
7:37
Overflow because the signs of the two numbers that we are adding are positive and the result is negative.
7:42
So to summarise, in the case of an to a, we will simply add to values as we know and discard any period and whatever we want to perform subtraction,
7:53
what we are going to do is negate the subtrend and added into the Mindlin.
8:06
And again, as in the case of an audition, we are going to discard any choreography.
8:12
And the only thing that we have to be careful here about is when we have a case for overflow.
8:17
So this will happen whenever we add to positive numbers and producing a negative
8:23
result or whenever we are to negative numbers and producing a positive result.
8:29
And of course, as I said in the beginning, adding to a brain, brands of different things will never produce an overflow.
8:36
So it's important to note here a tiny detail is that discarding the caveat of the result
8:47
of an automatic operation in scopolamine is something that we will do all the time.
8:55
And that is normal. And it does not by itself indicate that there has been an overflow in the four to know if there's been an overflow.
9:00
We have to look at these rules. So now let's look at how to perform multiplication and division with that to complement
9:08
representation and as we will see this going to be accomplished using the standard technique.
9:21
So, for example, consider that we have X times minus Y, so the two complement of minus way would be to do the power of N minus Y.
9:29
So if we use that to replace it, if we start with X times minus wait, we could convert this into X times to do the power of minus Y,
9:43
which again we could simplify it into two to the power of end times X minus X times Y as a result.
9:55
But in fact the expected result should be two to the power of minus X Y.
10:03
So the result of the solution here, what we have to do in order to perform multiplication is that we have to extend the representation of
10:10
each of the numbers to have twice as many bits and then perform the multiplication as we already know.
10:21
And as you will see, this is quite inefficient.
10:28
So here we have a very simple example of plus three times minus two using forbids that you can see using black.
10:31
So then the first thing that we do is make them have twice as many beats, what is called extension.
10:42
And then we will perform the regular multiplication with, as we saw already,
10:52
for unsane beats and adding them all up and the result would be taking the four beats, which is what we care about, which is minus six.
10:57
So as you can see here,
11:11
performing multiplications in this simple way is quite inefficient and computers do it using different techniques that are much faster than these.
11:13
But in discourse, we will not be looking at them.
11:25
So it's just enough to know these basic techniques.
11:29
And with this this is we reached the end of the second lecture and I hope to see you on the next one.
11:34