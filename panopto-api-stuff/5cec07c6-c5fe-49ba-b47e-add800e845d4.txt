ID: 5cec07c6-c5fe-49ba-b47e-add800e845d4
Title: L11 - A Design Example - Traffic Lights
Category: COMP40001 - Introduction to Computer Systems (Autumn 2021-2022)
Lecturer: Bjoern Schuller
Date: 06/11/2021
All right.
0:03
So in this lecture, we will be putting into practise what we have been talking about last time, the finite state machines for asynchronous circuits.
0:03
And we will be looking into traffic lights, so designing the traffic lights at an intersection.
0:14
And we will have a traffic lights controller that controls the lights on the intersection of two streets.
0:21
So we will work through a design example and we will, starting from an imprecise web description like most times of first of all,
0:31
we formalise the problem is a synchronous funded state machine,
0:41
then decide how many states are needed to construct the state transition diagram deciding and how many flip
0:45
flops will be needed to allocate binary numbers to the states and construct the state transition tables.
0:52
And I hope you remember our two rules to allocate the binary numbers.
1:01
Fine minimised circuits for this stage, transmissions. That is the inputs of the Q flip flops.
1:07
And finally, he signed the output logic that is deciding which lights within the traffic light should be lit in which state.
1:15
Now we have our informal spec of our traffic light, let's say the traffic department is trying out a new system of traffic lights,
1:26
and we are the ones who sign a synchronous digital system which operates this new type of traffic light at a road crossing.
1:33
So here we have our intersection and we have a quiet junction and the busy junction setting,
1:42
let's say this could be for the night, the quiet junction and it could be for rush hour during the day, the busy junction setting.
1:50
So our traffic light controller can operate these two different modes.
1:58
The difference being that as things are hectic during the busy hours, we have an extra two states added here,
2:02
which is red, red, red, red, meaning that in both directions, at one moment in time it will be a threat.
2:12
And then again, both right before we start over. Why?
2:20
Simply because we want to make sure during busy hours if nobody crashes into somebody from the other direction.
2:24
Hence, we have in this busy setting to edit states where both directions are red at the same time, whereas in the green, sorry,
2:31
climate jumps and setting when one traffic light is red, the other one is green and amber,
2:40
and then they turn off, this one gets red and the other ones remember.
2:47
So that's our controller to do traffic light with two operation modes,
2:53
and we will have one input variable again, and our outputs will be the lights for a traffic light.
2:59
And we will decide next. But also to, uh, decide how we go through the states.
3:09
So the junction type here as our input busy or quiet hours.
3:20
The traffic light controller, which controls the light bulbs of our two intersections,
3:27
and if you remember into this direction, we have our one, a one g one and to this one, I to teach you.
3:33
So these are the outputs here. And we're one, of course, is traffic light lit.
3:44
And there was traffic lighting on that.
3:49
Traffic light controller, as you can see here, has the clock input, and if you remember for a finite state machine,
3:52
the clock signal is connected to each of the flip flops inside the state part state switching part.
3:58
So we have flip flops again to cycles through the states in a sequence depending on the input,
4:07
the junction type, obviously, and they are all connected to the same clock signal.
4:15
Now, when the digital outputs are in the logic,
4:22
one state they turn their respective lights on is that there is one input which is set to logic one for questions and logic, zero for a busy junction.
4:25
So this unconventional, of course, we could have done the other way round, but we say Logic zero is a busy one and one is the quibbling.
4:36
No more and more formalised the problem, we are deciding how many states we need and what they are.
4:45
So we're designing a more machine again. The outputs depend only on the state, like in our accounting up example last lecture.
4:52
And there are no hidden states. We will need a state for each possible output, so we will.
5:00
I have six states because we have the requirement of six for the busy operation mode and the quiet operation mode.
5:10
We have the same sequences except for the two states where we have threats on those streets or missing.
5:22
So for the quiet junction three and six, not use.
5:37
And what we can see is here instead.
5:42
In our six slides, you're simply going from this verbal description here.
5:48
Particularly from a busy junction is a quiet junction with basically the same just skipping these red states here.
5:58
So we're basically putting this year into table here for each state, which lights should be on.
6:04
So if you look. Back here on stage one is, for example, the red green.
6:14
So first, traffic light is red and said one year.
6:26
The others are zero, and on the second traffic light green is true.
6:30
And so on and so forth. So our traffic controller, as such as Johnson, have been put on these light bulbs controllers, it's.
6:34
So now the outputs were both directions you read only appears twice in our table.
6:49
And the question is, can we make was one state for this?
6:56
So could we reduce the number of states from six to five actually? Think about it.
7:01
Could we or could we not? We're coming. Here in both cases.
7:07
So three and six are the ones where we have read red from settings and say two and five where we have different conservations here,
7:19
we're going to other states. So they're in different parts of the sequence and hence is why they're having the same output.
7:32
We still need to keep them simply because and not only depending on the same output,
7:38
but also in which place in the sequence, and hence we cannot combine three and six into one state.
7:44
Right? Right. Because we need to have them here. The correct water available.
7:51
Now, to decide how to represent the states, we let we select the type and number of flip flops for the circuit,
7:59
as said, we've already selected six states.
8:06
Now the minimal number of flip flops would be three because two to the third would be eight.
8:11
But two to the second would only be four. So two flip flops is not enough.
8:19
Three flip flops. There's enough, and we'll have the two unused states.
8:23
We could, of course, also be wasteful and use six flip-flops, meaning one flip flopper state, which might simplify the design of the circuit,
8:29
but it would be expensive and harder and again, expensive military means more higher cost and more space required,
8:38
more heat development, more power consumption and so on and so forth.
8:47
It's clearly what you wouldn't want. So for this is an example,
8:50
as usually we will use three D type flip flops as usual means here that we go with some minimum number and that we use detailed flip flops.
8:55
There will be two on the states, if you remember, because we have six ones and we would have eight available.
9:03
Next, we need to decide which three bit binary number we represent each state.
9:11
So again, if you remember, those were all two rules of elections and of laws like true.
9:17
We will use the heuristic, maximise the number of ones and the kind of maps,
9:24
so this sort of a such a risk and how is it motivated simply because we have a lot of once we can cluster
9:29
over many once in our maps and hence come up with less terms at the end and have a more compact circuit?
9:37
So is sort of another choice. And as we want to maximise the number of ones in the maps, we obviously default zero zero zero because it has no one.
9:45
We would have different choices for leaving out the next worst case, namely zero zero one or zero one zero one zero zero.
9:56
But for the sake of simplicity simplicity, we decide to leave out 001 next,
10:06
because this way the rest of us are sort of intuitively counting up on some binary representation.
10:12
Now, what do we do next is put the diagram into a table,
10:24
so the state transition table uses the same information that we find in this finite state machine diagram.
10:29
We have here, Jay, if you remember, Jay is our input. So zero, if you remember it's the busy junction and one is the quiet junction.
10:39
And in both cases, we say from which stage we transition, to which next, once you know,
10:50
is coming up, the state number from one to eight because we have eight states was already.
10:56
Three D type flip flops, but what is different for the two operation modes is that the next stage is different.
11:01
So now we see from stage one here in the busy setting, we follow the zero here and we walk to stage two hands from one.
11:13
We go to say two in the table from, say, two. Here we go for the J Input equal in zero to say three.
11:24
Hence the next stage is three.
11:32
Three, two, four, four, two, five and so on, we going round, it's the busy case which uses the whole circle and goes round using all the states.
11:36
Sorry. So that should be quite straightforward.
11:47
And then we have the two large states and use, so we do not care access here.
11:53
Now, for the quiet case, it's one, and the difference is basically that we skip a set the stage three and six,
12:01
if you remember where it was right, right and left right. And this means that we go from state to modern two, six three button, two state four.
12:08
So we're two to four.
12:18
And that leaves, say, three was an X, because in the case of one, we never actually go into say one because we transition in this inner circle.
12:21
So. What I mean by that is that we do not care, which is the next state after three, because we don't reach it.
12:32
From four to five, but from five in the case of one. So the cold case will go to the state one.
12:42
So you we go from five to one, leaving another one more.
12:49
Don't care. Maybe say six, which would also not reach in the quiet junction case for.
12:53
So now we add this together with the chosen state assignment.
13:03
So this is our recently crafted table from the state transitioning diagram,
13:10
and this is what we did before we chose the assignment from the state's binary numbers here.
13:16
If you remember, our heuristic was to maximise the number of ones here.
13:22
And so for that, we decided to do not use zero zero zero, which is in our state, seven which we don't care about.
13:27
It's not needed and we didn't. The U.S. was one eight.
13:35
Count it up, the voice. And what we do here is we put these two together by inserting for each state as a decimal number.
13:40
Here, it's equivalent in binary. So here we have one, we put in zero point zero and hands here rather than Wright, and now we write Q and.
13:49
Next, we write these,
14:04
if you remember the GQ flip flop takes them from the airport to the airport after the clock signal gives the next for him a rising edge,
14:06
the output of the input. Hence our input is next and our output is no.
14:16
And hence we write your cue and your team.
14:24
So this means that we tediously go through all of these decimal numbers, replace them by either quoting binary number here.
14:29
And that way, we now have straight transition table annotation.
14:39
Well, we know in binary or what the respective flip flop one two three D in Q3.
14:45
A little bit more of sleeves up and paper work by putting this into three camps,
14:56
and these three came about for the three Flip-Flops flip flop one, two and three.
15:05
They each follow the same shape here. Here we have cues and input.
15:10
We need to have representation like this because we have three flip flops and one input and.
15:21
This means that we will now enter for one year the way it is in this space here.
15:29
One after the other, again, like we did before. Now we're looking at, say, one zero zero and Q2, Q3 zero zero, which is, of course, this year.
15:39
And in this line here, we can see that one is an ex.
15:50
So we move this over here. Next one is zero zero zero one for this one year.
15:56
So zero zero zero one and we see it again. So this x here, do you want?
16:02
The next one is zero zero one one. So this would be this one year if you go that way, and for the one, we have one that's for this concerted year,
16:10
OK, this is some and said simply work translating from here to these three camps.
16:22
There is no special thing to consider other than to win one entry after the other to be ready.
16:31
Once you already, of course, you can start to do your optimisation.
16:39
And we do it by circling, if you remember as large as possible areas of 1s and XS XS, I don't care.
16:44
So if he can use them as a one or a zero, we will choose him as one to become even larger in the areas that we can search.
16:53
If you also remember, we can move across edges, so the pink lines here are one area that moves across the edges.
17:01
But we cannot be having here an area with a three.
17:12
So we cannot take on the One X here. It's a little bit larger.
17:22
It has to be sizes of. So even numbers by height and and.
17:27
Which hence or certainly goes like this, we find this large area here.
17:37
Covering the first big chunk of X and once then we need to cover for these ones here.
17:46
But the problem is that we.
17:56
One to be enough, the problem with the more optimal approach is that we get a larger area despite having already covered this excess,
18:03
here we go larger than just. This once here, we also improve the access again.
18:10
For a term, this will be less variable and moved. Finally, we have to cover for this one here as we haven't stuck with it yet.
18:18
And again, we can go over the edge here and take this on board as well.
18:28
And again, we're not able to take in this one or two because we need to have an even.
18:35
Or to influence on number of cells.
18:42
No. If you remember this large area here, um, means that it was due to not.
18:49
So the only thing that doesn't change over here is that cue to.
19:02
Which is always the first entry here. It's always near zero.
19:08
So that is sufficient to describe this large area. Whereas the lengthiest term, of course, is the one this is more or less surface area.
19:12
So this view here hence translates to this here.
19:21
And we have to see. The conditions there it is not because we have a zoo here.
19:25
Then you have the Q One shoe because of this one year.
19:38
We also have two three falls to three is the second digit boys.
19:44
So that's what we'll see when you're but you through changes experience you for this one.
19:52
Hence, you do not need to ride on through to an audition and all these areas,
19:58
if you remember all them come next year or so, this religion or that religion that.
20:03
Now again, this will be some work to do this for all the three months.
20:13
And again, it's straightforward, luckily.
20:17
You can see that and these are the two flip flops or more lucky settling on all of this here.
20:23
It's the largest deal in the middle. You cannot take them these one square because we are.
20:32
Have. Two, four, one four three.
20:38
Here to cover these once we can separate all those from who were leaving a lot of vaccines
20:47
to zero because we can't expect them to move any of the areas within sight of one million.
20:52
Similarly, here we need to go from the ones first and protect them, these ones here we can go over the edge and tech and stumble to these,
20:58
these two ones here we can access here and we can go across the as well as, you know, two terms here.
21:10
No, after this optimisation, we have all Boolean equations for the next stage one, two, three or one two three.
21:21
And now we need to check the donor chairs. What happens and if that is a good or a bad thing?
21:32
So what that means is that wherever we use them in any way as a zero one, so we decided that it should be.
21:39
We now need to enter its value. So these are the three camps we had on the last page.
21:46
Together with how we circled and when we have an ex within a circle, we need to turn into a one year.
21:56
In the case where we do not have a reason to settle, we we would put it to zero.
22:05
So all the green ones here and all corresponds to ActionScript and their values are chosen and responding to it within, inside or outside to circle.
22:11
Remember the second bomb D-type like we said, we had a lot of access not to use as ones.
22:23
And you can see this here. We're entering the lot of zeros here on this one.
22:29
And same here, whatever was within a circle.
22:36
And as an ex becomes one, it's brothers and sisters, your friends and foes.
22:40
So from that? We now are in a position to put this back into the states table and replace these exits in the state table,
22:46
tedious new with the implications forms to Japan, which is here, and the first one we do is this one on one you.
23:01
How do we get this one? One year we have to look at each, Caleb,
23:14
because we have only two and three and find these digits 41 years and this came up 42 here and this came up and said, it's true.
23:20
Of course, this came up and we always have to look at the same position in each of those because it's,
23:30
say, zero and zero two three zero, meaning we looked at zero zero zero zero and that is this one year.
23:36
This one over year belongs to this one year. Similarly, we do the same here in the next day.
23:44
This zero goes because zero zero zero tolerance is.
23:51
Finally, this one here is, of course, the same position on the last came up, which is the one known here.
23:57
Of course, you can imagine how this continues,
24:04
we go for the next line and we it from zero zero zero one positions one through table zero zero zero one.
24:06
Is this here? And this set is one here, zero here, zero here, hands with one zero zero.
24:15
Think we're good. And know how this works now.
24:25
And this one after the other, the final. Don't care spending one's or zero's changes.
24:29
No, as the next thing we'll see,
24:41
we going first forward and then after deciding on for X is what they are all the way back to which we went previously.
24:44
And no, though the last the big three final, actually, because we also have to try to resolve this,
24:52
that we go from the binary zero to our representation of next.
24:58
So we need to look up and our assignment of states, which is one on one and one on one, if you would look it up, is for.
25:04
Let me just go back for a little bit more segment. Here, one on one that's for.
25:14
So in that way. We now enter all the decimal states means here and more correspondence in the table or to the assignments.
25:26
So, you know, I have this intuitive form or next, depending on the input, variable representation, and Kim said the graph from that.
25:42
The part here is, of course, the one that we specify that is not affected by the deal and cares what is effective is, of course, the states.
25:55
We didn't care for state and political motivations, but we didn't care.
26:04
And that was the case in state three and six, if you remember.
26:08
If you have the quiet kids. So what happens here is good at first, because from, say, seven and eight on powering the system to be in that state.
26:15
We would go into permitted phase,
26:32
and after one sort of or half of them would be at the beginning of the sequence solutions that we would actually enter our desires in sequence.
26:36
However, she and states three and six, if you remember for the questions in case things do not look as good in said six,
26:50
things are good because should we go into six?
26:59
From from busy in zero.
27:06
But then changed the inputs to quiet, and when we move to one, that's perfect.
27:10
However, if you should move from the states with example during the busy setting and then change to quiet setting, we're getting stuck here.
27:16
At least as long as you can put us on the quiet terms, and that would make it a very quiet terms, and if you was a stable selection of red lines.
27:30
So that's why you need to to do all this going back to all these dates, from the diagram to the transition table of decimal to the final two,
27:41
and then we put this into the maps and then we walked from the camel's back.
27:53
So we've replaced in the transition table.
27:57
The axes in the binary then moved from the biological decimal ones and finally
28:02
went from the decimal table back to the graph here to visit me visually,
28:07
visually check. It's a good amount. And if you remember, what should we do, we could have included these families there from the beginning.
28:15
We could have found that moment informs them things would have been good,
28:26
but that would not be very efficient for them that the other option was helping.
28:30
So hacking would now mean that we have to look from the drone, cares how we get this fixed, how we get one of them to, to move to somewhere else.
28:34
So remember, hacking this did not happen was automated the same methods,
28:50
but it does for many this time you can try to correct the other by had the offending line and in the transition tables, you are in stage three next.
28:54
So one zero zero. From the current third one zero zero,
29:06
so is this orderly transition remaining ancestry so mixed and current state of this are the
29:11
same here in the sense we have in binary this from the same assignment table one zero zero.
29:20
And it was the case for one. Hence, the importance to fix it here.
29:27
To if he could change the three to one.
29:36
On this line, the circuit would work correctly.
29:41
So these three year to one, why because this would mean if we have the input could be one, we are instead three, the next state would be state four.
29:46
So we really want to change this three year to one and not have a zero.
29:55
So what do you do then is the back of the camps, and we can see that this can be done with an additional 30, namely, we have this zero here.
30:01
Which we now turn into a one.
30:14
And hence, we need an additional surgeon here to cover for this one.
30:26
And hence, we get an additional expression of their added because we have one more area circled.
30:33
So once we know what we have to change, we do this in the camps and that of course,
30:42
results of adding a term to the equation for that and increasingly for that team simply because we need to have a something more.
30:46
OK, so we have the state transition realised now we need to work on the output logic and we must design six circuits.
30:59
One for each of the lights. The inputs are the three bits defining the states.
31:10
And the outputs are one for Ruminated, of course, and zero for a land not enumerated.
31:17
It's amazingly. We just have 40 states here.
31:25
And we also have the states, and finally, this is our assignment here for the states and finally.
31:30
And then we add to this. Um, you outputs here, if you remember, and if you go back a bit.
31:37
Um, know, this is basically this table here.
31:52
Added simply by the assignment that we do have some minimal. Right, and say seven and eight, we do not care about the output.
31:57
What does it mean? It means that if we should start up the system instead of seven or eight, if you remember,
32:16
this would lead from the safe transition into a valid state, but it would mean that it thought of if you do not care.
32:23
We could end up with some weird conservation provides the worst of cases.
32:30
Obviously, both directions green.
32:35
Let's see now what we need to do now is do six camps because we've got three outputs for traffic light, so six bulbs in total.
32:38
And again, like before we just came upstream from this year.
32:51
This is why we needed to enter the assignment here was accused.
32:58
And know for each bulb, I want a one, H1Z1 one and so on.
33:03
We fill in here from this table. Let's look at one example.
33:09
Our one we have Q1, Q2, Q3, we are not depending on the input.
33:15
Hence his comments do not have high year because we had a more machine at a media machine.
33:20
And the output, if you remember, is not trending directly, but only indirectly.
33:27
We have a stage from the input. So.
33:31
Zero zero, zero, four or one means we look into zero zero zero zero for one and that is an X,
33:36
and this is what we do know for all the entries here, simply for the model from the one table to the six games.
33:45
And then starts the circling fun again, remember, we went to circle as large as possible and cover all the ones.
33:55
So, for example, this year. And leaving us to suffer this one that go over those two and even us grow this year, we go over those two.
34:04
This is. The easiest example here, we have a single one year.
34:20
Well, maybe actually the most simple one and the others.
34:29
Or similarly, some. But we have some larger areas covered, and here we also have exes included in their function as one.
34:36
So after circling, you might want to do we need to do anything about the term cares and someone I already told you about.
34:49
You do need if you start the system and you cannot allow to go through some stage change to move away from the state seven or eight.
35:00
Um, if you can afford that, you don't need to care about it.
35:14
Now from from that. Collecting this year.
35:20
We have all the equations, do you want me to do three or a.
35:28
One and two sort of ish? And we're just collecting all the questions that we found here.
35:33
The underlining here means that the underlying part appears more than once and hence does not need to be put with additional gates.
35:39
But on the wiring, screw the same part of of the circuit.
35:48
For example, you can spot this Q1 and Q3 down here, hence the Airbus underlined.
35:53
You can spot Q2 and Q3, not here.
36:03
Those two belong together,
36:11
and you get the pictures of underlining everything that appears multiple times here because we know you do not need extra grades for that.
36:13
Now we looked into the state assignment, but let's sort of revisit it.
36:22
We know the previous day that the state assignment may have a big impact on the overall size of the final circuit.
36:27
And for this design, do you see a risk reward? If you remember, maximise the number of funds in the Caymans for the stage sequence and the logic.
36:32
Hence, we have decided not to use zero zero zero one zero zero one as state assignments.
36:40
What would happen if you used some juristic rules to try to optimise the output logic?
36:46
No, we choose a different state assignment based on something that makes it easy on the output logic end,
36:53
and we choose the state assignment by letting Q one equal or one to one.
37:03
Equal on one. Here we have to care so that this could be anything that we don't care about this here, if you see it's not chosen the same way.
37:11
This part here has to remain unchanged. What we're changing now is the assignment here in this area.
37:22
So we're choosing purposefully the assignment such that one queue is immediately equalling one output.
37:29
And we also choose Q2 to be our two.
37:40
Now, excuse me, has to be given from from Q1, it was all done in Q2, it was hard to know what to not have enough flexibility any longer.
37:45
But perhaps we could find a way to optimise them, to have a little extra gates, even for Q3,
37:59
it will not be as easy as it's having any of these outputs, usually because they're different.
38:07
But we would do this in an efficient way. If he would do that.
38:12
Of course, all one equals Q1 and our two equals Q2, that's what we base it upon our assignment.
38:19
But filling the camps, we see that this all looks very good too.
38:27
And a whole it becomes very easy.
38:32
It is not a straightforward way to to guess this, it's just another way of approaching the assignment, and we're sort of luckier.
38:35
If you do that, of course, the state sequencing logic has to be changed because otherwise you would have ordered all states now.
38:46
So it's changing the assignment in the states. Sequence part meaning that we have to do the Cambridges and something again.
38:53
And again, if we go through this again, we have a much, much simpler bullying equations here for do you want me to read three?
39:01
So it looks like there's a much better state assignment, but we don't know yet.
39:11
We have to check again for the.
39:15
Don't care. And if you remember, this was going backwards until the end of the SIGGRAPH year.
39:20
So again, we would go. By filling ones and zeros here for the access entering the centre of the table was the binary representation
39:28
going from the binary to the decimal representation and going from the decimal representation to the growth.
39:39
We don't do this again here, but we look at the photograph from this assignment and we can see that in the state.
39:45
Seven And it's all looks good. We will be going, no matter what the input into a divided state from these states.
39:51
And that's. Let's get. No, from the novel equations.
40:00
We can easily put this into hardware.
40:12
The second state assignment was basically chosen to show you what a huge difference it can make the assignment and the assignment.
40:15
That's a crucial part to optimise to save and optimise hardware.
40:23
And as you remember from last lecture, if you have too many states, you better single these heuristics and application.
40:28
Let's just look at an example or one here, putting that into hardware is very easy because it's connected to Q1.
40:38
So this here and send us this one, somebody ought to request Q2 of this year.
40:45
And if you look at something more complicated, we could look at one.
40:51
And T one is an audit here, which is this all here and it comes.
40:57
Either from here, which is this end here and this end here is coming from Jay Inverted and Jane with it.
41:06
And let's follow this pause here. And.
41:13
Going into Q2, and Richard, in the same way we can do this, of course, to reverse engineered, but originally we did it this way around.
41:20
So what? You can just see the circuit, of course, principal means to this set of equations.
41:32
So that is the end of this lecture, and we have been following our principle of designing a sequential circuit was a finite state machine.
41:39
We went through those steps one by one from our informal specification to finally a circuit.
41:51
And in the mean, but in the middle, sort of checking if you use stone cares that we do not produce something undesirable.
41:56
So I hope you enjoyed the traffic lights and are all excited about the next lecture where we go even deeper down the rabbit hole.
42:06
Thank you very much.
42:14